<?xml version="1.0"?>

<robot name="xg1"
        xmlns:xacro="http://www.ros.org/wiki/xacro">

        <xacro:arg name="DEBUG" default="false"/>

        <xacro:include filename="$(find xg_description)/xacro/const.xacro"/>
        <xacro:include filename="$(find xg_description)/xacro/materials.xacro"/>
        <xacro:include filename="$(find xg_description)/xacro/leg.xacro"/>
        <xacro:include filename="$(find xg_description)/xacro/gazebo.xacro"/>
        <xacro:include filename="$(find xg_description)/xacro/camera.xacro"/>
        <xacro:include filename="$(find xg_description)/xacro/radar.xacro"/>

        <!-- Debug mode will hung up the robot, use "true" or "false" to switch it. -->
        <xacro:if value="$(arg DEBUG)">
                <link name="world"/>
                <joint name="base_static_joint" type="fixed">
                        <origin rpy="0 0 0" xyz="0 0 0"/>
                        <parent link="world"/>
                        <child link="base_link"/>
                </joint>
        </xacro:if>

        <link name="base_link">
                <visual>
                        <origin rpy="0 0 0" xyz="0 0 0"/>
                        <geometry>
                                <box size="0.001 0.001 0.001"/>
                        </geometry>
                </visual>
        </link>

        <joint name="floating_base" type="fixed">
                <origin rpy="0 0 0" xyz="0 0 0"/>
                <parent link="base_link"/>
                <child link="base"/>
        </joint>

        <link name="base">
                <visual>
                        <origin rpy="0 0 0" xyz="0 0 0"/>
                        <geometry>
                                <mesh filename="file://$(find xg_description)/meshes/base.STL" scale="1 1 1"/>
                                <!-- <box size="${base_length} ${base_width} ${base_height}"/> -->
                        </geometry>
                        <material name="">
                                <color rgba="0.75294 0.75294 0.75294 1" />
                        </material>
                </visual>
                <collision>
                        <origin rpy="0 0 0" xyz="0 0 0"/>
                        <geometry>
                                <box size="${base_length} ${base_width} ${base_height}"/>
                        </geometry>
                </collision>
                <inertial>
                        <origin rpy="0 0 0" xyz="${base_com_x} ${base_com_y} ${base_com_z}"/>
                        <mass value="${base_mass}"/>
                        <inertia ixx="${base_ixx}" ixy="${base_ixy}" ixz="${base_ixz}" iyy="${base_iyy}" iyz="${base_iyz}" izz="${base_izz}"/>
                </inertial>
        </link>

        <joint name="imu_joint" type="fixed">
                <parent link="base"/>
                <child link="imu_link"/>
                <origin rpy="0 0 0" xyz="0 0 0"/>
        </joint>

        <link name="imu_link">
                <inertial>
                        <mass value="0.001"/>
                        <origin rpy="0 0 0" xyz="0 0 0"/>
                        <inertia ixx="0.0001" ixy="0" ixz="0" iyy="0.0001" iyz="0" izz="0.0001"/>
                </inertial>
                <visual>
                        <origin rpy="0 0 0" xyz="0 0 0"/>
                        <geometry>
                                <box size="0.001 0.001 0.001"/>
                        </geometry>
                        <!-- <material name="red"/> -->
                </visual>
                <collision>
                        <origin rpy="0 0 0" xyz="0 0 0"/>
                        <geometry>
                                <box size=".001 .001 .001"/>
                        </geometry>
                </collision>
        </link>

        <xacro:leg name="FR" mirror="-1" mirror_dae= "False" front_hind="1" front_hind_dae="True" />
        <xacro:leg name="FL" mirror="1" mirror_dae="True" front_hind="1" front_hind_dae="True" />
        <xacro:leg name="RR" mirror="-1" mirror_dae="False" front_hind="-1" front_hind_dae="False" />
        <xacro:leg name="RL" mirror="1" mirror_dae="True" front_hind="-1" front_hind_dae="False" />

        <!-- if we simulate in gazbeo, we need to add the following command -->
        <!-- the following command will launch a controller-manager -->
        <!-- we need to write a robot_control.yaml file to specify which controllers we will use-->

        <!-- when we add the following command, it will automatically generate a controller manager variable-->
        <!-- so we do not need to create a controller manager variable in launch file by hand-->
        <gazebo>
                <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
                        <!-- <robot_param>robot_description</robot_param>
            <robot_param_node>robot_state_publisher_node</robot_param_node> -->
                        <parameters>$(find robot_bringup)/config/xg/robot_control.yaml</parameters>
                </plugin>
        </gazebo>
</robot>
